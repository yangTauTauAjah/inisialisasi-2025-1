import { Geist, Geist_Mono } from "next/font/google";
// import { ConfigProvider, Layout, theme } from "antd";
// import "./globals.css";
import "@ant-design/v5-patch-for-react-19";
import LayoutComponent from "./components/layoutContent";
// import { Footer } from "antd/es/layout/layout";
import { Metadata } from "next";
import { headers } from "next/headers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const header = await headers();
  // const router = useRouter();
  // const pathName = usePathname();
  // const [currentPage, setCurrentPage] = useState("");
  // const [currentMenuKey , setCurrentMenuKey] = useState("1");

  /* useEffect(() => {
    const path = pathName.slice(1).split("/");
    if (path[0].length > 0) {
      setCurrentPage(path[0]);
    } else setCurrentPage("landing");
  }, [pathName]); */

  /* const handleMenuClick = (e: unknown) => {
    if (e instanceof Object && "key" in e && typeof e.key === "string") {
      console.log(e.key);
      setCurrentMenuKey(e.key);
      router.push(`/assignment`);
    }
  }; */

  // Set up responsive height for content
  // useEffect(() => {
  //   const updateContentHeight = () => {
  //     const headerHeight = document.querySelector('.ant-layout-header')?.offsetHeight || 0;
  //     const footerHeight = document.querySelector('.ant-layout-footer')?.offsetHeight || 0;
  //     const contentElement = document.querySelector('.ant-layout-content');
  //     if (contentElement) {
  //       contentElement.style.minHeight = `calc(100vh - ${headerHeight}px - ${footerHeight}px)`;
  //     }
  //     const siteLayoutContent = document.querySelector('.site-layout-content');
  //     if (siteLayoutContent) {
  //       siteLayoutContent.style.minHeight = `calc(100vh - ${headerHeight}px - ${footerHeight}px - 48px)`;
  //     }
  //   };

  //   updateContentHeight();
  //   window.addEventListener('resize', updateContentHeight);
  //   return () => window.removeEventListener('resize', updateContentHeight);
  // }, []);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <LayoutComponent studentId={header.get("x-student-id")}>
          {children}
        </LayoutComponent>
      </body>
    </html>
  );

  // return (
  //   <ConfigProvider
  //     theme={{
  //       algorithm: theme.darkAlgorithm,
  //       token: {
  //         colorPrimary: "#1890ff",
  //         colorTextBase: "#f0f2f5",
  //         colorBgContainer: "#141414",
  //         colorBgLayout: "#001529",
  //         colorBorderSecondary: "rgba(255, 255, 255, 0.1)",
  //       },
  //       components: {
  //         Layout: {
  //           headerBg: "#001529",
  //           footerBg: "#001529",
  //         },
  //         Menu: {
  //           darkItemBg: "#001529",
  //           darkSubMenuItemBg: "#001529",
  //           darkItemHoverBg: "#1890ff",
  //           darkItemSelectedBg: "#1890ff",
  //           darkItemColor: "rgba(255, 255, 255, 0.65)",
  //           darkItemSelectedColor: "#fff",
  //         },
  //         Button: {
  //           colorPrimary: "#1890ff",
  //           colorText: "#f0f2f5",
  //         },
  //         Typography: {
  //           colorTextHeading: "#fff",
  //           colorText: "#f0f2f5",
  //         },
  //         Card: {
  //           headerBg: "rgba(255, 255, 255, 0.05)",
  //           actionsBg: "rgba(255, 255, 255, 0.05)",
  //           extraColor: "rgba(255, 255, 255, 0.65)",
  //         },
  //         Table: {
  //           headerBg: "rgba(255, 255, 255, 0.05)",
  //           headerColor: "#f0f2f5",
  //           // bodyBg: "var(--ant-color-bg-container)",
  //           rowHoverBg: "rgba(255, 255, 255, 0.08)",
  //           borderColor: "rgba(255, 255, 255, 0.1)",
  //           footerBg: "rgba(255, 255, 255, 0.05)",
  //         },
  //         Modal: {
  //           contentBg: "var(--ant-color-bg-container)",
  //           headerBg: "var(--ant-color-bg-container)",
  //           titleColor: "#fff",
  //           footerBg: "var(--ant-color-bg-container)",
  //         },
  //         Input: {
  //           activeBorderColor: "#1890ff",
  //           hoverBorderColor: "#1890ff",
  //           activeShadow: "0 0 0 2px rgba(24, 144, 255, 0.2)",
  //         },
  //         Select: {
  //           optionSelectedBg: "rgba(24, 144, 255, 0.2)",
  //           optionActiveBg: "rgba(255, 255, 255, 0.08)",
  //           optionSelectedColor: "#1890ff",
  //         },
  //         DatePicker: {
  //           activeBorderColor: "#1890ff",
  //           hoverBorderColor: "#1890ff",
  //           activeShadow: "0 0 0 2px rgba(24, 144, 255, 0.2)",
  //         },
  //         Upload: {
  //           colorFillAlter: "rgba(255, 255, 255, 0.05)",
  //           colorBorder: "rgba(255, 255, 255, 0.15)",
  //           colorText: "rgba(255, 255, 255, 0.85)",
  //           colorTextSecondary: "rgba(255, 255, 255, 0.65)",
  //         },
  //         Statistic: {
  //           colorText: "#f0f2f5",
  //           colorTextSecondary: "rgba(255, 255, 255, 0.65)",
  //         },
  //       },
  //     }}
  //   >
  //     <html lang="en">
  //       <body
  //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
  //       >
  //         <Layout style={{ minHeight: "100vh" }}>
  //           {/* <Header className="flex items-center" style={{ padding: "0 20px" }}>
  //             <Title
  //               level={3}
  //               style={{ color: "white", margin: 0, marginRight: "auto" }}
  //             >
  //               Assignment App
  //             </Title>
  //             <Menu
  //               theme="dark"
  //               mode="horizontal"
  //               selectedKeys={[currentPage]}
  //               // onClick={handleMenuClick}
  //               className="flex-grow justify-end"
  //               items={[
  //                 {
  //                   key: "landing",
  //                   icon: <HomeOutlined />,
  //                   label: "Home",
  //                   onClick: () => router.push("/"),
  //                 },
  //                 {
  //                   key: "assignment",
  //                   icon: <UploadOutlined />,
  //                   label: "Submit",
  //                   onClick: () => router.push("/assignment"),
  //                 },
  //                 // {
  //                 //   key: "admin",
  //                 //   icon: <SettingOutlined />,
  //                 //   label: "Admin",
  //                 //   onClick: () => router.push("/admin"),
  //                 // },
  //                 {
  //                   key: "auth",
  //                   icon: <LoginOutlined />,
  //                   label: "Auth",
  //                   onClick: () => router.push("/auth"),
  //                 }
  //               ]}
  //               style={{ minWidth: 0, flex: "auto" }}
  //             />
  //           </Header> */}
  //           {/* <Content style={{ padding: '0 50px' }}>
  //             <div
  //               className="site-layout-content"
  //               style={{
  //                 background: "var(--ant-color-bg-container)",
  //                 padding: 24,
  //                 minHeight: "calc(100vh - 112px)",
  //                 borderRadius: "8px",
  //                 // marginTop: "24px",
  //                 display: "flex",
  //                 flexDirection: "column",
  //                 justifyContent:
  //                   currentPage === "landing" ? "center" : "flex-start",
  //                 alignItems: currentPage === "landing" ? "center" : "stretch",
  //               }}
  //             >
  //               {children}
  //             </div>
  //           </Content> */}
  //           <LayoutComponent studentId={header.get('x-student-id')}>
  //             {children}
  //           </LayoutComponent>
  //         </Layout>
  //         <Footer
  //           style={{
  //             textAlign: "center",
  //             color: "rgba(255, 255, 255, 0.65)",
  //           }}
  //         >
  //           Assignment App Â©{new Date().getFullYear()} Created by Gemini
  //         </Footer>
  //       </body>
  //     </html>
  //   </ConfigProvider>
  // );
}
